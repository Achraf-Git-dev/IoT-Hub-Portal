@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager


<MudAppBar Fixed="true" Dense="true">
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
    <MudText Typo="Typo.h5">Azure IoT Hub Portal</MudText>
    <MudSpacer />
    <AuthorizeView>
        <Authorized>
            <MudMenu FullWidth="true" Direction="Direction.Bottom" ActivationEvent="@MouseEvent.MouseOver" OffsetY="true">
                <ActivatorContent>
                    <MudChip Icon="@Icons.Material.Filled.AccountCircle" Label="true" Color="Color.Secondary" Variant="Variant.Filled">@context.User.Identity.Name</MudChip>
                </ActivatorContent>
                <ChildContent>
                    <MudMenuItem>Details</MudMenuItem>
                    <MudMenuItem><a href="#" @onclick="BeginLogout">Log out</a></MudMenuItem>
                </ChildContent>
            </MudMenu>
        </Authorized>
        <NotAuthorized>
            <MudChip Icon="@Icons.Material.Filled.Login" Label="true" Color="Color.Secondary" Variant="Variant.Filled" @onclick="BeginLogin">Log in</MudChip>
        </NotAuthorized>
    </AuthorizeView>
</MudAppBar>

<MudDrawer @bind-Open="@_drawerOpen">
    <NavMenu />
</MudDrawer>

@code{
    private async Task BeginLogout(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    private void BeginLogin(MouseEventArgs args)
    {
        Navigation.NavigateTo("authentication/login");
    }

    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}