@page "/devicecreate"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using AzureIoTHub.Portal.Shared.Models
@attribute [Authorize]
@inject HttpClient Http
@inject ISnackbar Snackbar
@inject NavigationManager NavManager

<MudContainer MaxWidth="MaxWidth.False">
    <MudGrid>
        <MudItem xs="12">
            <EditForm Model="@Device" OnValidSubmit="SaveDevice">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h4">Device detail</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudGrid>
                            <MudItem md="6" xs="12">
                                <MudItem xs="12" Class="custom-form">
                                    <MudItem md="3" sm="12">
                                        <MudText>Device ID : </MudText>
                                    </MudItem>
                                    <MudItem md="9" sm="12">
                                        <MudTextField @bind-Value="@Device.DeviceID" Margin="Margin.Dense" Variant="Variant.Outlined"></MudTextField>
                                    </MudItem>
                                </MudItem>
                            </MudItem>
                            <MudItem md="6" xs="12">
                            </MudItem>
                            <MudItem md="6" xs="12">
                                <MudItem xs="12" Class="custom-form">
                                    <MudItem md="3" sm="12">
                                        <MudText>Type : </MudText>
                                    </MudItem>
                                    <MudItem md="9" sm="12">
                                        <MudSelect T="string" @bind-Value="@Device.DeviceType" Variant="Variant.Outlined" Dense="true">
                                            <MudSelectItem Value="@("LoRa Device")" />
                                            <MudSelectItem Value="@("Other")" />
                                        </MudSelect>
                                    </MudItem>
                                </MudItem>
                                <MudItem xs="12" Class="custom-form">
                                    <MudItem md="3" sm="12">
                                        <MudText>Model Type : </MudText>
                                    </MudItem>
                                    <MudItem md="9" sm="12">
                                        @*<MudTextField @bind-Value="@Device.ModelType" Margin="Margin.Dense" Variant="Variant.Outlined"></MudTextField>*@
                                        <MudSelect T="string" @bind-Value="@Device.ModelType" Variant="Variant.Outlined" Dense="true">
                                            @foreach (var val in SensorDict)
                                            {
                                                <MudSelectItem Value="@val.Key" />
                                            }
                                        </MudSelect>
                                        <MudChip>@(Device.ModelType ?? "Not selected")</MudChip>
                                        @if (Device.ModelType != null && SensorDict.ContainsKey(Device.ModelType))
                                        {
                                            <MudChip>@(SensorDict[Device.ModelType] ?? "Not selected")</MudChip>
                                        }
                                        else
                                        {
                                            <MudChip>Erreur</MudChip>
                                        }
                                    </MudItem>
                                </MudItem>
                            </MudItem>

                            <MudItem md="6" xs="12">
                                <MudItem xs="12" Class="custom-form">
                                    <MudItem md="3" sm="12">
                                        <MudText>IoT Asset ID : </MudText>
                                    </MudItem>
                                    <MudItem md="9" sm="12">
                                        <MudTextField @bind-Value="@Device.AssetID" Class="" Margin="Margin.Dense" Variant="Variant.Outlined"></MudTextField>
                                    </MudItem>
                                </MudItem>

                                <MudItem xs="12" Class="custom-form">
                                    <MudItem md="3" sm="12">
                                        <MudText>OTAA AppEUI : </MudText>
                                    </MudItem>
                                    <MudItem md="9" sm="12">
                                        <MudTextField @bind-Value="@Device.AppEUI" Class="" Margin="Margin.Dense" Variant="Variant.Outlined"></MudTextField>

                                    </MudItem>
                                </MudItem>
                                <MudItem xs="12" Class="custom-form">
                                    <MudItem md="3" sm="12">
                                        <MudText>OTAA AppKey : </MudText>
                                    </MudItem>
                                    <MudItem md="9" sm="12">
                                        <MudTextField @bind-Value="@Device.AppKey" Class="" Margin="Margin.Dense" Variant="Variant.Outlined"></MudTextField>
                                    </MudItem>
                                </MudItem>
                            </MudItem>
                            <MudItem md="6" xs="12">
                                <MudItem xs="12" Class="custom-form">
                                    <MudItem md="3" sm="12">
                                        <MudText>Location Asset ID : </MudText>
                                    </MudItem>
                                    <MudItem md="9" sm="12">
                                        <MudTextField @bind-Value="@Device.LocationCode" Class="" Margin="Margin.Dense" Variant="Variant.Outlined"></MudTextField>
                                    </MudItem>
                                </MudItem>

                                <MudItem xs="12" Class="custom-form">
                                    <MudItem md="3" sm="12">
                                        <MudText>Status : </MudText>
                                    </MudItem>
                                    <MudItem md="9" sm="12">
                                        <MudRadioGroup @bind-SelectedOption="@Device.IsEnabled" Class="custom-form">
                                            <MudItem md="4" sm="12">
                                                <MudRadio Option="@(true)" Color="Color.Primary">Enabled</MudRadio>
                                            </MudItem>
                                            <MudItem md="4" sm="12">
                                                <MudRadio Option="@(false)" Color="Color.Primary">Disabled</MudRadio>
                                            </MudItem>
                                        </MudRadioGroup>
                                    </MudItem>
                                </MudItem>

                            </MudItem>

                            <MudItem md="6" xs="12">

                            </MudItem>
                        </MudGrid>
                    </MudCardContent>
                </MudCard>
                <MudCardActions>
                    <MudFab ButtonType="ButtonType.Submit" Color="Color.Secondary" Icon="@Icons.Material.Filled.Save" Label="Save" Disabled="@(!success)" Class="ml-auto" />
                </MudCardActions>
            </EditForm>
        </MudItem>

    </MudGrid>
</MudContainer>

@code {

    [Parameter]
    public string DeviceID { get; set; }

    private DeviceListItem Device { get; set; } = new DeviceListItem();

    private bool success = true;
    private string[] errors = { };

    private IEnumerable<SensorModel> SensorList { get; set; } = new List<SensorModel>();
    public Dictionary<string, string> SensorDict { get; set; } = new Dictionary<string, string>();

    protected override async Task OnInitializedAsync()
    {
        SensorList = await Http.GetFromJsonAsync<SensorModel[]>("Sensors");

        foreach (var val in SensorList)
        {
            SensorDict.Add(val.Name, val.AppEUI);
        }
    }

    /// <summary>
    /// Sends a POST request to the DevicesController, to add the new device to the Azure IoT Hub
    /// </summary>
    public async void SaveDevice()
    {
        await Http.PostAsJsonAsync<DeviceListItem>($"Devices/create", Device);

        // Prompts a snack bar to inform the action was successful
        // TODO : Deal more effectively with error/success messages
        Snackbar.Add($"Device {Device.DeviceID} has been successfully created!", Severity.Success);

        // Go back to the list of devices
        NavManager.NavigateTo("devices");

    }
}

